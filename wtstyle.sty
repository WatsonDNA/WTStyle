%%
%% This is file `wtstyle.sty'.
%%
%% Copyright 2016 Takuto ASAKURA (wtsnjp)
%%   GitHub:   https://github.com/wtsnjp
%%   Twitter:  @wtsnjp
%%
%% This package is distributed under the MIT License.
%%

% -------------------------------------------------- declarations

\RequirePackage{expl3}
\RequirePackage{xparse}
\ProvidesExplPackage {wtstyle} {2018/01/08} {0.1.0}
  {Make your preamble clean}

% -------------------------------------------------- messages

\msg_new:nnn { wtstyle } { no-hyperref }
  {
    The~hyperref~package~is~required~to~set~PDF~metadata.\\
    I~will~load~hyperref~automatically.
  }

\msg_new:nnn { wtstyle } { set-docinfo }
  { Setting~metadata~'#1'~to~'#2'. }
\msg_new:nnn { wtstyle } { unknown-docinfo }
  { Metadata~'#1'~is~unknown;~this~will~be~ignored. }

\msg_new:nnn { wtstyle } { load-package }
  { Loading~package~'#1'~without~any~option. }
\msg_new:nnn { wtstyle } { load-package-with-options }
  { Loading~package~'#1'~with~options~#2. }

\msg_new:nnn { wtstyle } { file-not-exist }
  { File~'#1'~does~not~exist;~skipping. }

% -------------------------------------------------- utilities

\cs_generate_variant:Nn \regex_count:NnN { NoN }
\cs_generate_variant:Nn \regex_extract_once:NnNT { NoN }

% -------------------------------------------------- variables

% doc info (metadata)
\bool_new:N \g_wtst_set_metadata_bool

\tl_new:N \g_wtst_doc_title_tl
\tl_new:N \g_wtst_doc_author_tl

% doc style
\tl_new:N \g_wtst_style_title_tl

% package handling
\tl_new:N \l_wtst_pkgname_tl
\tl_new:N \l_wtst_pkgopts_tl

\prop_new:N \l_wtst_pkglist_prop

\regex_const:Nn \c_wtst_package_regex { \A,(\[.*\]|)\s*(.*)\Z }
\regex_const:Nn \c_wtst_begin_bracket_regex { \[ }
\regex_const:Nn \c_wtst_end_bracket_regex { \] }

% -------------------------------------------------- user interface

\NewDocumentCommand \setdocinfo { m }
  {
    \keys_set:nn { wtst-docinfo } { #1 }
  }

\NewDocumentCommand \setdocstyle { m }
  {
    \keys_set:nn { wtst-docstyle } { #1 }
  }

% -------------------------------------------------- docinfo keys & commands

\keys_define:nn { wtst-docinfo }
  {
    set-metadata .bool_set:N = \g_wtst_set_metadata_bool,
    unknown .code:n = \exp_args:No \wtst_set_docinfo:nn { \l_keys_key_tl } { #1 },
  }

\cs_new:Npn \wtst_set_docinfo:nn #1#2
  {
    \str_case:nnF { #1 }
      {
        { title }
        {
          \tl_gset:Nn \g_wtst_doc_title_tl { #2 }
          \title { { \tl_use:N \g_wtst_style_title_tl #2 } }
        }

        { author }
        {
          \tl_gset:Nn \g_wtst_doc_author_tl { #2 }
          \author { #2 }
        }
      }
      {
        \cs_if_exist:cTF { #1 }
          {
            \use:c { #1 } { #2 }
            %\msg_info:nnxx { wtstyle } { set-docinfo } { #1 } { #2 }
          }
          {
            \msg_warning:nnx { wtstyle } { unknown-docinfo } { #1 }
          }
      }
  }

% -------------------------------------------------- docstyle keys

\keys_define:nn { wtst-docstyle }
  {
    packages .code:n = { \wtst_load_packages:n { #1 } },
    setting-files .code:n = { \wtst_load_settings:n { #1 } },
    emph-style .code:n = { \DeclareTextFontCommand { \emph } { #1 } },
    page-style .code:n = { \pagestyle { #1 } },
    title-style .code:n = { \tl_gset:Nn \g_wtst_style_title_tl { #1 } },
  }

\cs_new:Npn \wtst_load_packages:n #1
  {
    \tl_clear:N \l_tmpa_tl
    \clist_map_inline:nn { #1 }
      {
        \tl_put_right:Nn \l_tmpa_tl { ,##1 }
        \regex_count:NoN \c_wtst_begin_bracket_regex { \l_tmpa_tl } \l_tmpa_int
        \regex_count:NoN \c_wtst_end_bracket_regex { \l_tmpa_tl } \l_tmpb_int
        \int_compare:nNnT { \l_tmpa_int } = { \l_tmpb_int }
          {
            \regex_extract_once:NoNT \c_wtst_package_regex { \l_tmpa_tl } \l_tmpa_seq
              {
                \seq_pop_right:NN \l_tmpa_seq \l_wtst_pkgname_tl
                \seq_pop_right:NN \l_tmpa_seq \l_wtst_pkgopts_tl
                \prop_if_in:NoT \l_wtst_pkglist_prop { \l_wtst_pkgname_tl }
                  {
                    \prop_get:NoN \l_wtst_pkglist_prop
                      { \l_wtst_pkgname_tl } \l_wtst_pkgname_tl
                  }
                \tl_if_empty:NTF \l_wtst_pkgopts_tl
                  {
                    \msg_info:nnx { wtstyle } { load-package } { \l_wtst_pkgname_tl }
                    \usepackage { \l_wtst_pkgname_tl }
                  }
                  {
                    \msg_info:nnxx { wtstyle } { load-package-with-options }
                      { \l_wtst_pkgname_tl } { \l_wtst_pkgopts_tl }
                    \exp_after:wN \usepackage \l_wtst_pkgopts_tl { \l_wtst_pkgname_tl }
                  }
              }
            \tl_clear:N \l_tmpa_tl
          }
      }
  }

\cs_new:Npn \wtst_load_settings:n #1
  {
    \clist_map_inline:nn { #1 }
      {
        \file_if_exist:nTF { ##1 }
          {
            \file_input:n { ##1 }
          }
          {
            \msg_warning:nnn { wtstyle } { file-not-exist } { ##1 }
          }
      }
  }

% -------------------------------------------------- engine-specific things

\sys_if_engine_luatex:T
  {
    \prop_set_from_keyval:Nn \l_wtst_pkglist_prop
      {
        otf = luatexja-otf,
        okumacro = bxokumacro,
      }
  }

% -------------------------------------------------- hooks

\AtBeginDocument { \wtst_docinfo_hook: }

\cs_new:Nn \wtst_docinfo_hook:
  {
    \bool_if:NT \g_wtst_set_metadata_bool
      {
        \cs_if_free:NT \hypersetup
          {
            \msg_warning:nn { wtstyle } { no-hyperref }
            \RequirePackage { hyperref }
          }
        \group_begin:
          \cs_set:Npn \thanks ##1 {}
          \hypersetup
            {
              pdftitle = { \g_wtst_doc_title_tl },
              pdfauthor = { \g_wtst_doc_author_tl },
            }
        \group_end:
      }
  }

% vim: ft=expl3 nospell:
%% EOF
